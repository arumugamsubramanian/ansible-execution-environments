name: Execution Environments Build

on:
  workflow_dispatch:

  push:
    branches:
      - main

env:
  REGISTRY: docker.io
  IMAGE_NAME: ${{ github.repository }}
  OWNER_NAME: ${{ github.repository_owner }}

jobs:
  prepare-matrix:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
      length: ${{ steps.set-matrix.outputs.length }}
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v4.7.0
        with:
          python-version: 3.10.13

      - name: Generate matrix
        id: generate-matrix
        working-directory: ${{ github.workspace }}
        run: |
          python -u generate_matrix_github_action.py \
          --start-ref $(git rev-parse HEAD^1) \
          --end-ref $(git rev-parse HEAD) \
          --output matrix_output.json

      - name: Read matrix
        id: set-matrix
        working-directory: ${{ github.workspace }}
        run: |
          MATRIX_JSON=$(cat matrix_output.json)
          echo "matrix=$MATRIX_JSON" >> $GITHUB_OUTPUT
          MATRIX_LENGTH=$(echo $MATRIX_JSON | jq '.include | length')
          echo $MATRIX_LENGTH
          echo "length=$MATRIX_LENGTH" >> $GITHUB_OUTPUT

  build-ee:
    needs: [ prepare-matrix ]
    if: ${{ needs.prepare-matrix.outputs.length != '0' }}
    runs-on: ubuntu-latest
    environment: DockerHub
    strategy:
      matrix: ${{fromJson(needs.prepare-matrix.outputs.matrix)}}
      fail-fast: false
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.head_ref }}

      - name: Fetch the base and head refs
        run: |
          git fetch origin ${{ github.base_ref }}
          git fetch origin ${{ github.head_ref }}

      - name: Install python requirements (ansible-builder)
        run: pip install -r requirements.txt

      - name: Define environment variables
        run: |
          echo "EE=${{ matrix.ee }}" >> $GITHUB_ENV
          echo "IMAGE_TAG=latest" >> $GITHUB_ENV

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@f95db51fddba0c2d1ec667646a06c2ce06100226 # v3.0.0

      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@343f7c4344506bcbf9b4de18042ae17996df046d # v3.0.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@96383f45573cb7f253c731d3b3ab81c87ef81934 # v5.0.0
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build image and create artifact
        run: |
          echo "Would build: ${{ env.EE }}"

      - name: Build image and create artifact
        working-directory: ${{ matrix.ee }}
        run: |
          ansible-builder build -v 3 \
          --context=../${{ env.EE }} \
          --tag=${{ env.REGISTRY }}/${{ env.OWNER_NAME }}/ansible-${{ env.EE }}:${{ env.IMAGE_TAG }}

      - name: Push To docker.io
        id: push-to-dockerhub
        uses: redhat-actions/push-to-registry@v2
        with:
          image: ${{ env.OWNER_NAME }}/ansible-${{ env.EE }}
          tags: ${{ env.IMAGE_TAG }}
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Print image url
        run: echo "Image pushed to ${{ steps.push-to-dockerhub.outputs.registry-paths }}"